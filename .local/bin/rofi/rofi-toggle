#!/bin/sh
#
# Toggle various services.
# Requires rofi, openssh (optional), thqm (optional), transmission-cli (optional), picom (optional)

RUNNING="✅"
STOPPED="❎"
HTTP_PID_FILE="/tmp/python_http_pid"
THQM_TEMP_IMG="/tmp/thqm.png"

menu() {
    # Menu command.
    rofi -dmenu -p "Select" -no-custom "$@"
}

input() {
    # User input command.
    rofi -dmenu -p "Input" -lines 0 -filter "$HOME/"
}

# Checks
check_ssh() {
    [ "$(systemctl is-active sshd.service)" = "active" ]
}

check_jackett() {
    [ "$(systemctl is-active jackett.service)" = "active" ]
}

check_transmission() {
    pgrep -x "transmission-da" > /dev/null
}

check_thqm() {
    pgrep -x thqm > /dev/null
}

check_http() {
    [ -f "$HTTP_PID_FILE" ]
}

check_picom() {
    pgrep -x picom > /dev/null
}

# Toggles
toggle_ssh() {
    if check_ssh; then
        sudo systemctl stop sshd.service && notify-send -i "process-stop" "ssh" "Stopped ssh"
    else
        sudo systemctl start sshd.service && notify-send -i "terminal" "ssh" "Started ssh"
    fi
}

toggle_jackett() {
    if check_jackett; then
        sudo systemctl stop jackett.service && notify-send -i "process-stop" "ssh" "Stopped Jackett"
    else
        sudo systemctl start jackett.service && notify-send -i "download" "ssh" "Started Jackett"
    fi
}

toggle_thqm() {
    if check_thqm; then
        killall thqm && \
            notify-send -i "process-stop" "thqm" "Stopped thqm"
    else
        thqm-media --save-qrcode "$THQM_TEMP_IMG" & sleep 0.1 && \
            notify-send -i "$THQM_TEMP_IMG" "thqm" "Started thqm"
    fi
}

toggle_transmission() {
    if check_transmission; then
        killall transmission-da && notify-send -i "process-stop" "Transmission" "Stopped Transmission"
    else
        transmission-daemon && notify-send -i "transmission" "Transmission" "Started Transmission"
    fi
}

toggle_http() {
    if check_http; then
        local http_pid
        http_pid="$(cat "$HTTP_PID_FILE")" && kill $http_pid && rm "$HTTP_PID_FILE" && \
            notify-send -i "process-stop" "http" "Stopped http server"
    else
        local server_path
        server_path="$(input)" || exit
        python3 -m http.server -d "$server_path" & echo "$!" > "$HTTP_PID_FILE" && \
            notify-send -i "network-connect" "http" "Started http server\nhttp://0.0.0.0:8000/"
    fi
}

toggle_picom() {
    if check_picom; then
        killall picom && notify-send -i "process-stop" "picom" "Stopped picom"
    else
        picom -b && notify-send -i "display" "picom" "Started picom"
    fi
}


# Menu
init_menu() {
    local thqm_status
    local ssh_status
    local jackett_status
    local transmission_status
    local http_status
    local picom_status
    thqm_status="$(check_thqm && echo $RUNNING || echo $STOPPED)"
    ssh_status="$(check_ssh && echo $RUNNING || echo $STOPPED)"
    jackett_status="$(check_jackett && echo $RUNNING || echo $STOPPED)"
    transmission_status="$(check_transmission && echo $RUNNING || echo $STOPPED)"
    http_status="$(check_http && echo $RUNNING || echo $STOPPED)"
    picom_status="$(check_picom && echo $RUNNING || echo $STOPPED)"

    local menu_string
    menu_string=""
    declare -i n_lines
    type thqm > /dev/null && menu_string="$menu_string$thqm_status Toggle thqm\\n"
    type ssh > /dev/null && menu_string="$menu_string$ssh_status Toggle ssh\\n"
    systemctl list-unit-files jackett.service > /dev/null && menu_string="$menu_string$jackett_status Toggle Jackett\\n"
    type transmission-daemon > /dev/null && menu_string="$menu_string$transmission_status Toggle Transmission\\n"
    type python3 > /dev/null && menu_string="$menu_string$http_status Toggle http\\n"
    type picom > /dev/null && menu_string="$menu_string$picom_status Toggle Picom\\n"

    n_lines="$(printf "%b" "$menu_string" | wc -l)"
    printf "%b" "$menu_string" | menu -l "$n_lines"
}

case "$(init_menu)" in
    *"Toggle thqm")
        toggle_thqm
        ;;
    *"Toggle ssh")
        toggle_ssh
        ;;
    *"Toggle Jackett")
        toggle_jackett
        ;;
    *"Toggle Transmission")
        toggle_transmission
        ;;
    *"Toggle http")
        toggle_http
        ;;
    *"Toggle Picom")
        toggle_picom
        ;;
esac
